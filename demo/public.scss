// css3
如何使<pre>的内容自动换行呢？首先看一下<pre>的浏览器默认样式：
都有这个white-space: pre，看看white-space的值描述：

normal：默认。空白会被浏览器忽略。
pre：空白会被浏览器保留。其行为方式类似 HTML 中的 <pre>标签。
nowrap：文本不会换行，文本会在在同一行上继续，直到遇到 <br> 标签为止。
pre-wrap：保留空白符序列，但是正常地进行换行。
pre-line：合并空白符序列，但是保留换行符。
inherit：规定应该从父元素继承 white-space 属性的值。
————————————————
原文链接：https://blog.csdn.net/a1056244734/article/details/113882278


伪类的效果可以通过添加实际的类来实现 
p:first-child {
    color: red;
}
伪元素/伪对象的效果可以通过添加实际的元素来实现 
p::first-letter {
    color: red;
}
所以它们的本质区别就是是否抽象创造了新元素

* {
  margin: 0;
  padding: 0;
}
// 优先级高于html
:root {
  --color-base: #242731;
  --button-default-bg: var(--color-base);
}
document.body.style.setProperty('--color-base', value); // js修改css3的var变量，动态改变scss中的样式
  <select oninput="document.body.style.setProperty('--blend-mode', this.value)" size="12">
        <option>normal</option>
        <option>multiply</option>
        <option>overlay</option>
        <option>darken</option>
    </select>
https://wow.techbrood.com/fiddle/41577
————————————————

*选择器是这几个里面权重最低的(0,0,0)，但为什么能生效于html的子元素呢，
这里涉及到了“css样式继承”， transparent、background、position这几个属性是不会被样式继承的，所以父元素html的background不会生效于子元素。
此外，"继承的权重是最低的"，即便demo2继承了demo1的color:blue，依旧会是权重(0, 0, 0)的*会生效。

lib-flexible 的REM适配方案是把一行分为10份，所以rooValue应当为设计稿宽度的1/10，
我们的设计稿宽是750，所以应该设置为750/10 = 75，
但是Vant建议设置为37.5，因为它是基于375写的，所以用vant时要按设计稿尺寸除以二，
rootValue支持两种：
数字：固定的数值
函数：可以动态处理返回
postcss-pxtorem 处理每个CSS⽂件的时候都会来调⽤这个函数
它会把被处理的CSS⽂件相关的信息通过参数传递给该函数
// postcss.config.js
module.exports= {
  plugins: {
    autoprefixer: {},
    'postcss-pxtorem': {
      rootValue( {file}) {
        return file.indexOf('vant') !==-1 ? 37.5: 75;
      },
      propList: ['*'],
    },
  },
}
链接：https://wenku.baidu.com/view/ae45c606ac45b307e87101f69e3143323968f504.html
--------------------------------------------------------

// 将移动端宽度10等分，计算出rem的px数
document.addEventListener('DOMContentLoaded', function(e) {
    document.getElementsByTagName('html')[0].style.fontSize=window.innerWidth / 10 + 'px';
  }, false);


// 父盒子塌陷问题解决办法：
两个盒子呈嵌套关系，子盒子设置 margin-top时父盒子会随着子盒子同时下移，或者取两者中的最大值，
产生margin塌陷,并且 margin-top看不到效果。
由于margin值需要根据参照点来实现偏移的，当没有参照点时就出现了无法偏移的情况，所以需要手动给父元素设置一个点出来做子元素的偏移参照物。
解决方法如下：
1.给父盒子添加溢出隐藏：overflow：hidden；

2.在父盒子中设置上边框：border-top;
border-top: 1px solid transparet;
设置透明上边框,不影响外观.

3.在父盒子中设置上内边距：padding-top；
padding-top:1px;

4.给父盒子设置相对定位,子盒子设置绝对定位(子绝父相);
position:relative;
position:absolute;

5.after伪类清除浮动。 外部盒子的after伪元素设置clear属性。
用于解决浮动引起的盒子塌陷问题.
#parent:after{
clear: both;
content: “”;
width: 0;
height: 0;
display: block;
visibility: hidden;
}
————————————————

书写语法：box-shadow: inset   h-shadow   v-shadow   blur-radius   color;
    inset 阴影类型为内阴影
    outset 阴影类型为外阴影  （不添加时默认为外阴影，但是添加后反而会使得阴影无效，所以如果要想实现外阴影可以不加）
    h-shadow----- 阴影的水平位移量 允许为负值
    v-shadow----- 阴影垂直位移量 允许为负值
    blur-radius-----阴影模糊半径 即阴影向外模糊的模糊范围  值越大越模糊 
    color----- 阴影颜色，定义绘制阴影时所使用的颜色  
————————————————
书写语法：text-shadow: h-shadow v-shadow blur color; 
h-shadow -----水平阴影的位置，允许负值 
v-shadow -----垂直阴影的位置，允许负值 
blur-----模糊的距离 （如果设置的是0，那么将和正常的文字清晰度一样）
color------阴影的颜色
————————————————


// 红上黑下线性梯度
background: linear-gradient(to bottom, red, black);
// 字间距
letter-spacing: 1px;

// 色调360度不断旋转：
.bird {
  animation: pulse 5s linear infinite;
}
@keyframes pulse {
  from {
    filter: hue-rotate(0);
  }

  to {
    filter: hue-rotate(360deg);
  }
}

// 最后一行省略号
@mixin ellipsis($line: 1, $substract: 0) {
  @if $line==1 {
    white-space: nowrap;
    text-overflow: ellipsis;
  }

  @else {
    display: -webkit-box;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
  }

  width: 100% - $substract;
  overflow: hidden;
}


module.exports= {
  "plugins": {
     "postcss-px-to-viewport": {      viewportWidth: 750,      viewportHeight: 1334,      unitPrecision: 3,      viewportUnit: 'vw',      selectorBlackList: ['.usepixel'],      minPixelValue: 1,      mediaQuery: false    }
   }
}
其中几个配置项的含义如下：

viewportWidth：视口宽度，这里设置为跟设计稿宽度一致；

viewportHeight：视口高度，随便设置一个就可以；

unitPrecision：转换后值的精度，3表示保留3位小数；

viewportUnit：转换成什么视口单位，这里当然是vw；

selectorBlackList：是一个选择符数组，对应声明中的像素单位不会转换；

minPixelValue：最小像素值，大于等于这个值才会转换；

mediaQuery：是否转换媒体查询中的像素。
-----------------------------------
  


img图片保持尺寸，同时有背景色。 img {
  width: 80px;
  height: 80px;
  object-fit: contain;
  background-color: #f8f8f8;
}


.imgs {
  display: flex;
  flex-wrap: nowrap;
  justify-content: space-evenly;

  .img-box {
    display: flex;
    flex-wrap: wrap;
    text-align: center;
    overflow: hidden;

    img {
      margin: 0 auto;
    }

    span {
      // 确保文字处于img下方, 宽度4等分可以设置为25%
      flex-basis: 100%;
      // 左右固定，中间自适应可以让中间，flex-grow: 1
    }
  }
}

// 点击使img变色，必须配合外围的overflow
.click {
  transform: translateY(-60px);
  //颜色、x轴偏移量、y轴偏移量
  filter: drop-shadow(#fd7d18 0 60px);
  -webkit-filter: drop-shadow(#fd7d18 0 60px); //兼容其它浏览器
}


水平粘性居中 position: sticky;
left: 0;

// 换行平均分配
.even {
  display: flex;
  justify-content: space-evenly;
  flex-wrap: wrap;
  width: 100%;

  .box {
    width: 100px; // 每个元素的宽度，决定一行有几个元素。
  }
}

p~ul选择器 p之后出现的所有ul，p不一定有ul子元素。两种元素必须拥有相同的父元素，但是 ul不必直接紧随 p。
+(加号）：二者有相同的父元素，选择紧接在另一个元素后的元素。 
>(大于号)：是css3特有的选择器，A>B 表示选择A元素的所有子B元素，只选择一代。 
空格：A B {}, 表示A标签的所有子代B标签。 
.c1.c2 中间没有空格，表明必须同时有c1 和 c2类的元素才符合条件。
, 逗号：A, B {}, 表示A, B两个标签同时拥有大括号中的CSS样式。
若想获取某一元素后的所有子元素，可以使用如下语句：element1 > * {}

  CSS :checked伪类用于匹配被用户选中的单选按钮Radio或复选按钮checkbox。 input[type="checkbox"]:checked + label {
    /* 表示页面上的所有选中的checkbox按钮 */
    color: red;
  }

  option:checked {
    /* 表示页面上的所有选中的select的选项 */
    color: green;
  }

  // <!--<lable>标签的for属性，绑定到input标签上-->
  // css中加号表示选择相邻兄弟,叫做“相邻兄弟选择器”,该选择器能够匹配指定元素后面相邻的兄弟元素。
  <input id="check1"type="checkbox"/> <label for="check1"></label>

  /*当input框为选中状态时，lable标签的样式，其中在css选择时，“：”表示当前input框的值，即checked；
      \2714代表对号*/
  #check1:checked + label::before {
    display: block;
    content: "\2714";
    text-align: center;
    font-size: 16px;
    background: blue;
    color: white;
  }

  #check1 {
    display:none;
  }

  // https://blog.csdn.net/fly_666/article/details/117476287
  /** 文本环绕效果首先考虑浮动 float
flex 布局子元素可以通过百分比计算高度
多行文本截断还可以结合文本环绕效果用max-height模拟实现
状态切换可以借助 checkbox
CSS 改变文本可以采用伪元素生成
多利用 CSS 遮挡 “障眼法”。
*/
  .desc-box {
    border: 1px solid #dbdbdb;
    border-width: 1px 0;
    padding: 20px 0;
    margin: 20px 0;
    display: flex;

    img {
      height: 100px;
      width: 150px;
      margin-right: 20px;
    }

    .desc {
      flex: 1;
      color: #7e8081;
      line-height: 28px;
      text-overflow: ellipsis;

      &.hide {
        height: 90px;
        display: -webkit-box; // 必须有，否则clamp可能不兼容
        overflow: hidden;
        word-wrap: break-word;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        white-space: normal; // 必须有，否则可能不换行！！！
      }

      &.act {
        height: "auto";
      }

      &::before {
        content: "";
        float: right;
        width: 0px;
        height: calc(100% - 24px);
        /*先随便设置一个高度*/
        background: red;
      }

      .btn {
        float: right; //展开
        /*其他装饰样式*/
        clear: both;
        border: 0px;
      }
    }

    // 标题单行省略号，内容多行行尾省略号
    .learn-text {
      width: 422px;
      height: 131px;
      overflow: hidden;
      overflow-wrap: break-word;
      text-overflow: ellipsis; //...

      .learn-title {
        height: 45px;
        display: block;
        color: rgba(55, 59, 75, 1);
        font-size: 32px;
        white-space: nowrap;
        text-overflow: ellipsis; //...
        overflow: hidden;
        line-height: 45px;
        text-align: left;
      }

      .learn-content {
        height: 74px;
        display: block;
        color: rgba(126, 128, 129, 1);
        text-overflow: ellipsis; //...
        // overflow: hidden;
        font-size: 26px;
        line-height: 37px;
        text-align: left;
        margin-top: 12px;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;

        // &::before {
        //   content: '...';
        // }
      }
    }

    https: //blog.csdn.net/fly_666/article/details/117476287

    $height: 70px;

    .main {
      margin-left: calc(50% - 68px);
      height: calc(100vh - #{$height});
    }

    // img 水平居中
    img {
      clear: both;
      display: block;
      margin: auto;
    }

    // 透明底部 tab
    .tabbar-bottom {
      height: 120px;
      bottom: 100px;
      background: rgba(255, 255, 255, 0.9);
      box-shadow: 0px -3px 6px 0px rgba(0, 0, 0, 0.05);
      position: fixed;
      left: 0;
      z-index: 1;
      box-sizing: content-box;
      width: 100%;
    }

    // 图片配文字
    .step {
      overflow-x: auto;
      display: flex;
      justify-content: space-between;
      width: 100%;
      background: #ffffff;
      box-shadow: 0px 4px 8px 0px rgba(3, 27, 78, 0.12);
        border-radius: 5px;
    }

    .step-box {
      flex: 2;
      display: flex;
      justify-content: space-around;
      align-items: center;
      cursor: pointer;

      &.last {
        flex: 1;
        margin-right: 0;
      }

      &.active {
        .step-item {
          border-bottom: 4px solid #3a78fc;
          border-radius: 2px;
        }
      }

      .line {
        width: 60px;
        height: 20px;
      }
    }

    .step-item {
      padding: 20px;
      display: inline-block;
      position: relative;

      &.last {
        padding-left: 0;
        padding-right: 10px;
      }

      img {
        width: 60px;
        height: 60px;
        clear: both;
        display: block;
        margin: auto;
      }

      .tag {
        width: 14px;
        height: 29px;
        position: absolute;
        top: 0;
        left: 0;
      }

      p {
        margin-top: 10px;
        color: #373b4b;
        line-height: 28px;
        text-align: center;
        white-space: nowrap; // 关键，否则文字换行
      }

      // 调用wangeditor时的html样式
      /deep/ .dhtml {
        color: #5f6464;
        line-height: 24px;
        padding-bottom: 20px;
        margin-bottom: 20px;
        border-bottom: 1px solid #dbdbdb;

        table {
          border: none;
          border-collapse: collapse;
        }

        table td,
        table th {
          border: 1px solid black !important;
          padding: 3px 5px;
          min-width: 50px;
          height: 20px;
        }

        table th {
          border-right: 1px solid #ccc;
          border-bottom: 2px solid #ccc;
          text-align: center;
          background-color: #f1f1f1;
        }

        blockquote {
          display: block;
          border-left: 8px solid #d0e5f2;
          padding: 5px 10px;
          margin: 10px 0;
          line-height: 1.4;
          font-size: 100%;
          background-color: #f1f1f1;
        }

        code {
          display: inline-block;
          *display: inline;
          *zoom: 1;
          background-color: #f1f1f1;
          border-radius: 3px;
          padding: 3px 5px;
          margin: 0 3px;
        }

        pre code {
          display: block;
        }

        ul,
        ol {
          margin: 10px 0 10px 20px;
        }

        pre {
          border: 1px solid #ccc;
          background-color: #f8f8f8;
          padding: 10px;
          margin: 5px 0px;
          font-size: 0.8em;
          border-radius: 3px;
        }

        .ql-editor ul li {
          list-style-type: disc; // 解决序列li前面的.不展示问题
        }

        .ql-editor ol li {
          list-style-type: decimal; // 解决序列li前面的数字不展示问题
        }

        i {
          font-style: italic !important;
        }

        // wangeditor本身斜体按钮不生效
        // <div id="editor" class="unique"></div>
        .unique {
          i {
            font-style: italic !important;
          }
        }
      }



      // & 用在嵌套的scss代码里，来引用父元素，&父选择器标识符并不仅仅用于链接伪类选择器，看如下scss代码实例： 
      #content aside {
        color: red;
        body.ie & {
          color: green
        }
      }
      // 编译为css代码如下： 
      #content aside {
        color: red
      };
      body.ie #content aside {
        color: green
      }

      // table的border='1' 没有边框，解决办法：
      .normal-table {
        background: rgba(247, 248, 249, 1);
        table-layout: fixed;
        width: 100%;
        td {
          border: 1px solid rgba(232, 235, 239, 1);
          padding: 8px 13px;
          white-space: normal;
          word-break: break-all;
          line-height: 16px;
        }
        & tr td:nth-child(2n+1) {
          font-weight: bold;
        }
      }

      55m<sup>2</sup>

      // 设置bc的图片，必须铺满，否则浏览器伸缩时会露出来
            background: url("../../../static/images/bm-charge-bg.png") no-repeat;
            background-size: cover;

            // 段落换行
          pre {
              white-space: pre-wrap;
              word-wrap: break-word;
            }